<UserControl
    x:Class="ModernWpf.SampleApp.ControlPages.ThemesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    xmlns:controls="clr-namespace:ModernWpf.SampleApp.Controls"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:ModernWpf.SampleApp.ControlPages"
    xmlns:presets="clr-namespace:ModernWpf.SampleApp.Presets"
    mc:Ignorable="d"
    d:DesignWidth="1200"
    d:DesignHeight="900"
    Style="{StaticResource ControlPageStyle}">

    <UserControl.Resources>
        <local:AppThemeConverter x:Key="AppThemeConverter" />
    </UserControl.Resources>

    <ScrollViewer>
        <ui:SimpleStackPanel
            Spacing="24"
            Margin="{StaticResource ControlPageContentMargin}">

            <ui:RadioButtons
                Header="Theme Mode"
                SelectedItem="{Binding Source={x:Static ui:ThemeManager.Current}, Path=ApplicationTheme, Mode=TwoWay, Converter={StaticResource AppThemeConverter}}">
                <ui:RadioButtons.ItemsSource>
                    <local:AppThemes />
                </ui:RadioButtons.ItemsSource>
            </ui:RadioButtons>

            <ComboBox
                x:Name="PresetsComboBox"
                MinWidth="200"
                ui:ControlHelper.Header="Presets"
                SelectedItem="{Binding CurrentPreset, Source={x:Static presets:PresetManager.Current}, Mode=TwoWay}">
                <sys:String>Default</sys:String>
                <sys:String>Forest</sys:String>
                <sys:String>Lavender</sys:String>
                <sys:String>Nighttime</sys:String>
            </ComboBox>

            <TextBlock
                Text="Choose your accent color"
                Style="{StaticResource SubtitleTextBlockStyle}" />
            <ListView
                x:Name="AccentColorSelector"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                SelectionMode="Single"
                SelectedValuePath="Color"
                SelectedValue="{Binding AccentColor, Source={x:Static ui:ThemeManager.Current}, Mode=TwoWay}"
                ScrollViewer.VerticalScrollBarVisibility="Disabled">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid
                            Rows="6"
                            Columns="8" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemsSource>
                    <local:AccentColors />
                </ListView.ItemsSource>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem" BasedOn="{StaticResource GridViewItemExpanded}">
                        <Setter Property="Margin" Value="0,0,2,3" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Rectangle
                            Fill="{Binding Brush}"
                            ToolTipService.InitialShowDelay="1000"
                            ToolTipService.BetweenShowDelay="500">
                            <Rectangle.ToolTip>
                                <ToolTip Content="{Binding Name}" />
                            </Rectangle.ToolTip>
                        </Rectangle>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.Resources>
                    <SolidColorBrush x:Key="SystemControlHighlightListLowBrush" Color="{DynamicResource SystemBaseHighColor}" />
                    <SolidColorBrush x:Key="SystemControlHighlightAccentBrush" Color="{DynamicResource SystemBaseHighColor}" />
                    <SolidColorBrush x:Key="SystemControlHighlightListAccentMediumBrush" Color="{DynamicResource SystemBaseHighColor}" />
                    <SolidColorBrush x:Key="SystemControlForegroundBaseMediumHighBrush" Color="{DynamicResource SystemAltHighColor}" />
                </ListView.Resources>
            </ListView>

            <!--<ui:RadioButtons
                x:Name="WindowThemeSelector"
                Header="Window RequestedTheme"
                ItemsSource="{Binding Source={x:Type ui:ElementTheme}, Converter={StaticResource EnumValuesConverter}}" />-->

            <!--<Button
                Content="Open new window"
                Click="OpenNewWindow" />-->

            <StackPanel>
                <TextBlock
                    Text="App-level custom theme brush"
                    Style="{StaticResource BodyTextBlockStyle}"
                    Margin="0,0,0,4" />
                <Rectangle
                    Width="200"
                    Height="50"
                    HorizontalAlignment="Left"
                    Fill="{DynamicResource CustomThemeBrush}" />
            </StackPanel>

            <StackPanel>
                <TextBlock
                    Text="App-level custom theme brush overriden at element level"
                    Style="{StaticResource BodyTextBlockStyle}"
                    Margin="0,0,0,4" />
                <Rectangle
                    Width="200"
                    Height="50"
                    HorizontalAlignment="Left"
                    Fill="{DynamicResource CustomThemeBrush}"
                    ui:ThemeManager.HasThemeResources="True">
                    <Rectangle.Resources>
                        <ui:ElementThemeResources>
                            <ui:ElementThemeResources.ThemeDictionaries>
                                <ResourceDictionary x:Key="Light">
                                    <SolidColorBrush x:Key="CustomThemeBrush" Color="DarkRed" />
                                </ResourceDictionary>
                                <ResourceDictionary x:Key="Dark">
                                    <SolidColorBrush x:Key="CustomThemeBrush" Color="Orange" />
                                </ResourceDictionary>
                                <ResourceDictionary x:Key="HighContrast">
                                    <SolidColorBrush x:Key="CustomThemeBrush" Color="DarkBlue" />
                                </ResourceDictionary>
                            </ui:ElementThemeResources.ThemeDictionaries>
                        </ui:ElementThemeResources>
                    </Rectangle.Resources>
                </Rectangle>
            </StackPanel>

            <!--<StackPanel>
                <TextBlock
                    Text="WindowGlassBrush"
                    Style="{StaticResource BodyTextBlockStyle}"
                    Margin="0,0,0,4" />
                <Rectangle
                    Width="200"
                    Height="50"
                    HorizontalAlignment="Left"
                    Fill="{x:Static SystemParameters.WindowGlassBrush}" />
            </StackPanel>-->

            <CheckBox
                Content="Use modern window style"
                DataContext="{Binding MainWindow, Source={x:Static Application.Current}}"
                IsChecked="{Binding Path=(ui:WindowHelper.UseModernWindowStyle)}" />

            <GroupBox
                x:Name="InverseAppThemeGroupBox"
                Header="Inverse app theme"
                Background="{DynamicResource SystemControlPageBackgroundAltHighBrush}"
                Margin="-24,0,-24,0"
                Padding="24,0,24,15"
                ui:ThemeManager.RequestedTheme="{Binding Source={x:Static ui:ThemeManager.Current}, Path=ActualApplicationTheme, Converter={StaticResource InverseAppThemeConverter}}">
                <GroupBox.Resources>
                    <Thickness x:Key="GroupBoxHeaderMargin">24,4,24,20</Thickness>
                </GroupBox.Resources>
                <ui:SimpleStackPanel Spacing="24">
                    <TextBox
                        Width="200"
                        HorizontalAlignment="Left"
                        ui:ControlHelper.Header="Actual application theme"
                        Text="{Binding Source={x:Static ui:ThemeManager.Current}, Path=ActualApplicationTheme, Mode=OneWay}"
                        IsReadOnly="True" />

                    <TextBox
                        Width="200"
                        HorizontalAlignment="Left"
                        ui:ControlHelper.Header="Actual element theme"
                        Text="{Binding ElementName=InverseAppThemeGroupBox, Path=(ui:ThemeManager.ActualTheme), Mode=OneWay}"
                        IsReadOnly="True" />

                    <TextBox
                        Width="200"
                        HorizontalAlignment="Left"
                        ui:ControlHelper.Header="Actual accent color"
                        Text="{Binding Source={x:Static ui:ThemeManager.Current}, Path=ActualAccentColor, Mode=OneWay}"
                        IsReadOnly="True" />

                    <ui:ToggleSwitch
                        Header="High contrast"
                        IsOn="{Binding Path=(SystemParameters.HighContrast), Mode=OneWay}"
                        IsEnabled="False" />
                </ui:SimpleStackPanel>
            </GroupBox>
        </ui:SimpleStackPanel>
    </ScrollViewer>
</UserControl>
