<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:root="clr-namespace:ModernWpf"
    xmlns:local="clr-namespace:ModernWpf.Controls"
    xmlns:primitives="clr-namespace:ModernWpf.Controls.Primitives">

    <Style x:Key="DefaultWindowStyle" TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlPageTextBaseHighBrush}" />
        <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundAltHighBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="{DynamicResource TitleBarHeight}"
                    CornerRadius="0"
                    GlassFrameThickness="1"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="root:ThemeManager.IsThemeAware" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border
                        x:Name="LayoutRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Resources>
                            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                            <primitives:WindowPaddingConveter x:Key="WindowPaddingConveter" />
                        </Border.Resources>
                        <Border.Padding>
                            <MultiBinding Converter="{StaticResource WindowPaddingConveter}">
                                <Binding
                                    Path="WindowState"
                                    RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding
                                    Path="WindowNonClientFrameThickness"
                                    Source="{x:Static root:BindableSystemParameters.Current}" />
                                <Binding
                                    Path="WindowResizeBorderThickness"
                                    Source="{x:Static root:BindableSystemParameters.Current}" />
                                <Binding
                                    Path="WindowCaptionHeight"
                                    Source="{x:Static root:BindableSystemParameters.Current}" />
                            </MultiBinding>
                        </Border.Padding>
                        <Border
                            x:Name="HighContrastBorder"
                            BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <local:TitleBar
                                    Icon="{TemplateBinding Icon}"
                                    Title="{TemplateBinding Title}"
                                    Style="{TemplateBinding local:TitleBar.TitleBarStyle}"
                                    ButtonStyle="{TemplateBinding local:TitleBar.ButtonStyle}"
                                    IsIconVisible="{TemplateBinding local:TitleBar.IsIconVisible}"
                                    IsBackButtonVisible="{TemplateBinding local:TitleBar.IsBackButtonVisible}"
                                    IsBackEnabled="{TemplateBinding local:TitleBar.IsBackEnabled}"
                                    BackButtonCommand="{TemplateBinding local:TitleBar.BackButtonCommand}"
                                    BackButtonCommandParameter="{TemplateBinding local:TitleBar.BackButtonCommandParameter}" />

                                <AdornerDecorator Grid.Row="1">
                                    <ContentPresenter />
                                </AdornerDecorator>

                                <ResizeGrip
                                    x:Name="WindowResizeGrip"
                                    Grid.Row="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    IsTabStop="false"
                                    Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="LayoutRoot" Property="BorderBrush" Value="{DynamicResource WindowBorderInactive}" />
                            <Setter TargetName="HighContrastBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding HighContrast, Source={x:Static root:BindableSystemParameters.Current}}" Value="true">
                            <Setter TargetName="HighContrastBorder" Property="BorderThickness" Value="7,0,7,7" />
                        </DataTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />
                            <Setter TargetName="HighContrastBorder" Property="BorderThickness" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Window" BasedOn="{StaticResource DefaultWindowStyle}" />

</ResourceDictionary>