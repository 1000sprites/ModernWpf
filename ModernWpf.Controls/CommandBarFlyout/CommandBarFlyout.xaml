<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    xmlns:local="clr-namespace:ModernWpf.Controls"
    xmlns:primitives="clr-namespace:ModernWpf.Controls.Primitives">

    <ui:CornerRadiusFilterConverter x:Key="TopCornerRadiusFilterConverter" Filter="Top" />
    <ui:CornerRadiusFilterConverter x:Key="BottomCornerRadiusFilterConverter" Filter="Bottom" />

    <Style x:Key="CommandBarFlyoutAppBarButtonStyleBase" TargetType="local:AppBarButton">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SystemControlTransparentBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <!--<Setter Property="AllowFocusOnInteraction" Value="False" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AppBarButton">
                    <Border
                        x:Name="Root"
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="ContentRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Viewbox
                                x:Name="ContentViewbox"
                                Height="16"
                                HorizontalAlignment="Stretch">
                                <ContentPresenter
                                    x:Name="Content"
                                    Content="{TemplateBinding Icon}"
                                    TextElement.Foreground="{TemplateBinding Foreground}" />
                            </Viewbox>
                            <TextBlock
                                x:Name="OverflowTextLabel"
                                Text="{TemplateBinding Label}"
                                Style="{DynamicResource BodyTextBlockStyle}"
                                Foreground="{TemplateBinding Foreground}"
                                FontFamily="{TemplateBinding FontFamily}"
                                TextAlignment="Left"
                                TextWrapping="NoWrap"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Margin="12,0,12,0"
                                Padding="0,5,0,7"
                                Visibility="Collapsed" />
                            <!--<TextBlock
                                x:Name="KeyboardAcceleratorTextLabel"
                                Grid.Column="1"
                                Style="{DynamicResource CaptionTextBlockStyle}"
                                Text="{TemplateBinding KeyboardAcceleratorTextOverride}"
                                MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}"
                                Margin="24,0,12,0"
                                Foreground="{DynamicResource SystemControlBackgroundBaseMediumBrush}"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Visibility="Collapsed" />-->
                            <ui:FontIcon
                                x:Name="SubItemChevron"
                                Grid.Column="2"
                                Glyph="&#xE76C;"
                                FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                FontSize="12"
                                Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"
                                Margin="12,0,12,0"
                                VerticalAlignment="Center"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Overflow -->
                        <Trigger Property="ApplicationViewState" Value="Overflow">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!-- OverflowWithToggleButtons -->
                        <Trigger Property="ApplicationViewState" Value="OverflowWithToggleButtons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="38,0,12,0" />
                        </Trigger>
                        <!-- OverflowWithMenuIcons -->
                        <Trigger Property="ApplicationViewState" Value="OverflowWithMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="Width" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Height" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="12,0,12,0" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="38,0,12,0" />
                        </Trigger>
                        <!-- OverflowWithToggleButtonsAndMenuIcons -->
                        <Trigger Property="ApplicationViewState" Value="OverflowWithToggleButtonsAndMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="Width" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Height" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="38,0,12,0" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="76,0,12,0" />
                        </Trigger>
                        <!-- PointerOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                        </MultiTrigger>
                        <!-- Pressed -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource SystemControlHighlightListMediumBrush}" />
                        </MultiTrigger>
                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                            <!--<Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />-->
                        </Trigger>
                        <!-- OverflowPointerOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource SystemControlBackgroundListLowBrush}" />
                        </MultiTrigger>
                        <!-- OverflowPressed -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource SystemControlBackgroundListMediumBrush}" />
                        </MultiTrigger>
                        <!-- OverflowSubMenuOpened -->
                        <!--<MultiTrigger>
                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource SystemControlHighlightListAccentLowBrush}" />
                        </MultiTrigger>-->
                        <!-- KeyboardAcceleratorTextVisible -->
                        <!--<Trigger>
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>-->
                        <!-- HasFlyout -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToolBar.IsOverflowItem" Value="True" />
                                <Condition Property="HasFlyout" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="SubItemChevron" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="ToolBar.IsOverflowItem" Value="True">
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="Width" Value="NaN" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CommandBarFlyoutAppBarButtonStyle" TargetType="local:AppBarButton" BasedOn="{StaticResource CommandBarFlyoutAppBarButtonStyleBase}" />

    <Style x:Key="CommandBarFlyoutAppBarToggleButtonStyleBase" TargetType="local:AppBarToggleButton">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SystemControlForegroundTransparentBrush}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <!--<Setter Property="AllowFocusOnInteraction" Value="False" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AppBarToggleButton">
                    <Border
                        x:Name="Root"
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Rectangle
                                x:Name="CheckedHighlightBackground"
                                Fill="{DynamicResource SystemControlHighlightListAccentLowBrush}"
                                Opacity="0" />
                            <Grid x:Name="ContentRoot">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    x:Name="OverflowCheckGlyph"
                                    Text="&#xE0E7;"
                                    Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"
                                    FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                    FontSize="16"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Margin="12,4,12,4"
                                    Opacity="0"
                                    Visibility="Collapsed" />
                                <Viewbox
                                    x:Name="ContentViewbox"
                                    Height="16"
                                    HorizontalAlignment="Stretch">
                                    <ContentPresenter
                                        x:Name="Content"
                                        Content="{TemplateBinding Icon}"
                                        TextElement.Foreground="{TemplateBinding Foreground}" />
                                </Viewbox>
                                <TextBlock
                                    x:Name="OverflowTextLabel"
                                    Text="{TemplateBinding Label}"
                                    Style="{DynamicResource BodyTextBlockStyle}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    TextAlignment="Left"
                                    TextWrapping="NoWrap"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Margin="38,0,12,0"
                                    Padding="0,5,0,7"
                                    Visibility="Collapsed" />
                                <!--<TextBlock
                                    x:Name="KeyboardAcceleratorTextLabel"
                                    Grid.Column="1"
                                    Style="{DynamicResource CaptionTextBlockStyle}"
                                    Text="{TemplateBinding KeyboardAcceleratorTextOverride}"
                                    MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}"
                                    Margin="24,0,12,0"
                                    Foreground="{DynamicResource SystemControlBackgroundBaseMediumBrush}"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Visibility="Collapsed" />-->
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Overflow -->
                        <Trigger Property="ApplicationViewState" Value="Overflow">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckedHighlightBackground" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!-- OverflowWithMenuIcons -->
                        <Trigger Property="ApplicationViewState" Value="OverflowWithMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="MaxWidth" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="MaxHeight" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="38,0,12,0" />
                            <Setter TargetName="CheckedHighlightBackground" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="76,0,12,0" />
                        </Trigger>
                        <!-- PointerOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                        </MultiTrigger>
                        <!-- Pressed -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource SystemControlHighlightListMediumBrush}" />
                        </MultiTrigger>
                        <!-- Disabled -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCheckedOrIndeterminate" Value="False" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                            <!--<Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />-->
                        </MultiTrigger>
                        <!-- Checked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="False" />
                                <Condition Property="IsCheckedOrIndeterminate" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckedHighlightBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <!-- CheckedPointerOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="False" />
                                <Condition Property="IsCheckedOrIndeterminate" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckedHighlightBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentMediumBrush}" />
                            <Setter TargetName="CheckedHighlightBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <!-- CheckedPressed -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="False" />
                                <Condition Property="IsCheckedOrIndeterminate" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckedHighlightBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentHighBrush}" />
                            <Setter TargetName="CheckedHighlightBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <!-- CheckedDisabled -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="False" />
                                <Condition Property="IsCheckedOrIndeterminate" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                            <Setter TargetName="CheckedHighlightBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentLowBrush}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                            <!--<Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />-->
                            <Setter TargetName="CheckedHighlightBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <!-- OverflowPointerOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource SystemControlBackgroundListLowBrush}" />
                        </MultiTrigger>
                        <!-- OverflowPressed -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Root" Property="Background" Value="{DynamicResource SystemControlBackgroundListMediumBrush}" />
                        </MultiTrigger>
                        <!-- OverflowChecked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="True" />
                                <Condition Property="IsCheckedOrIndeterminate" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckedHighlightBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <!-- OverflowCheckedPointerOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="True" />
                                <Condition Property="IsCheckedOrIndeterminate" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckedHighlightBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentMediumBrush}" />
                            <Setter TargetName="CheckedHighlightBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <!-- OverflowCheckedPressed -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInOverflow" Value="True" />
                                <Condition Property="IsCheckedOrIndeterminate" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckedHighlightBackground" Property="Fill" Value="{DynamicResource SystemControlHighlightListAccentHighBrush}" />
                            <Setter TargetName="CheckedHighlightBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <!-- KeyboardAcceleratorTextVisible -->
                        <!--<Trigger>
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>-->
                        <Trigger Property="ToolBar.IsOverflowItem" Value="True">
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="Width" Value="NaN" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CommandBarFlyoutAppBarToggleButtonStyle" TargetType="local:AppBarToggleButton" BasedOn="{StaticResource CommandBarFlyoutAppBarToggleButtonStyleBase}" />

    <Style x:Key="CommandBarFlyoutCommandBarOverflowPresenterStyle" TargetType="primitives:CommandBarOverflowPresenter">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="136" />
        <Setter Property="MaxWidth" Value="440" />
        <Setter Property="MaxHeight" Value="480" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarOverflowPresenter">
                    <Border
                        x:Name="LayoutRoot"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeStates">
                                <VisualState x:Name="DisplayModeDefault" />
                                <VisualState x:Name="FullWidthOpenDown" />
                                <VisualState x:Name="FullWidthOpenUp" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />
                            <ScrollViewer
                                Content="{TemplateBinding Content}"
                                Margin="{TemplateBinding BorderThickness}"
                                Padding="0,4,0,4"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultCommandBarFlyoutToolBarStyle" TargetType="primitives:CommandBarFlyoutToolBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarFlyoutToolBar">
                    <Border
                        x:Name="LayoutRoot"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">
                        <Border.Resources>
                            <Style TargetType="local:AppBarButton" BasedOn="{StaticResource CommandBarFlyoutAppBarButtonStyle}" />
                            <Style TargetType="local:AppBarToggleButton" BasedOn="{StaticResource CommandBarFlyoutAppBarToggleButtonStyle}" />
                            <primitives:CommandBarFlyoutCommandBarTemplateSettings x:Key="FlyoutTemplateSettings" />
                            <!--
                                We'll only provide opening and closing storyboards for RS5 and above,
                                because we aren't able to suppress the default flyout open/close animations
                                on earlier versions of the OS than that.
                            -->
                            <Storyboard
                                x:Key="OpeningStoryboard"
                                FillBehavior="Stop">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=OpenAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.300" KeySpline="0.1,0.9 0.2,1" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=OpenAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=OpenAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.300" KeySpline="0.1,0.9 0.2,1" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=OpenAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <!--
                                The closing animation plays the opening animation in reverse and then snaps to a position where
                                the clip will fully hide the flyout, in preparation for closing the flyout.
                                As such, it's expected and normal that we use OpenAnimation* template settings properties
                                in the closing animation.
                            -->
                            <Storyboard x:Key="ClosingStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=OpenAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.150" KeySpline="0.7,0 1,0.5" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=OpenAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=CloseAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=OpenAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.150" KeySpline="0.7,0 1,0.5" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=OpenAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=CloseAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterContentRoot" Storyboard.TargetProperty="Opacity">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="0" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.200" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot" Storyboard.TargetProperty="Opacity">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="0" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.200" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="CollapsedToExpandedUpStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandUpOverflowVerticalPosition}" />
                                </DoubleAnimationUsingKeyFrames>-->
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.300" KeySpline="0.1,0.9 0.2,1" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.300" KeySpline="0.1,0.9 0.2,1" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.300" KeySpline="0.1,0.9 0.2,1" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandUpAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.300" KeySpline="0.1,0.9 0.2,1" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandUpAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard
                                x:Key="ExpandedUpToCollapsedStoryboard"
                                FillBehavior="Stop">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandUpOverflowVerticalPosition}" />
                                </DoubleAnimationUsingKeyFrames>-->
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.150" KeySpline="0.7,0 1,0.5" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionMoreButtonAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.150" KeySpline="0.7,0 1,0.5" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.150" KeySpline="0.7,0 1,0.5" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandUpAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.150" KeySpline="0.7,0 1,0.5" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandUpAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandUpAnimationHoldPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="CollapsedToExpandedDownStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.300" KeySpline="0.1,0.9 0.2,1" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.300" KeySpline="0.1,0.9 0.2,1" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.300" KeySpline="0.1,0.9 0.2,1" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandDownAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.300" KeySpline="0.1,0.9 0.2,1" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandDownAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl" Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard
                                x:Key="ExpandedDownToCollapsed"
                                FillBehavior="Stop">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.150" KeySpline="0.7,0 1,0.5" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionMoreButtonAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.150" KeySpline="0.7,0 1,0.5" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.150" KeySpline="0.7,0 1,0.5" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform" Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandDownAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.150" KeySpline="0.7,0 1,0.5" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandDownAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151" Value="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandDownAnimationHoldPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Border.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Collapsed" To="ExpandedUp" GeneratedDuration="0:0:0.300" Storyboard="{StaticResource CollapsedToExpandedUpStoryboard}" />
                                    <VisualTransition From="ExpandedUp" To="Collapsed" GeneratedDuration="0:0:0.150" Storyboard="{StaticResource ExpandedUpToCollapsedStoryboard}" />
                                    <VisualTransition From="Collapsed" To="ExpandedDown" GeneratedDuration="0:0:0.300" Storyboard="{StaticResource CollapsedToExpandedDownStoryboard}" />
                                    <VisualTransition From="ExpandedDown" To="Collapsed" GeneratedDuration="0:0:0.150" Storyboard="{StaticResource ExpandedDownToCollapsed}" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed" />
                                <VisualState x:Name="ExpandedUp">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MoreButtonTransform"
                                            Storyboard.TargetProperty="X"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentRootClipTransform"
                                            Storyboard.TargetProperty="X"
                                            To="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}"
                                            Duration="0" />
                                        <!--<DoubleAnimation
                                            Storyboard.TargetName="OverflowContentRootTransform"
                                            Storyboard.TargetProperty="Y"
                                            To="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandUpOverflowVerticalPosition}"
                                            Duration="0" />-->
                                        <DoubleAnimation
                                            Storyboard.TargetName="OverflowContentRootClipTransform"
                                            Storyboard.TargetProperty="X"
                                            To="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="OverflowContentRootClipTransform"
                                            Storyboard.TargetProperty="Y"
                                            To="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandUpAnimationEndPosition}"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandedDown">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MoreButtonTransform"
                                            Storyboard.TargetProperty="X"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentRootClipTransform"
                                            Storyboard.TargetProperty="X"
                                            To="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="OverflowContentRootClipTransform"
                                            Storyboard.TargetProperty="X"
                                            To="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionAnimationEndPosition}"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="OverflowContentRootClipTransform"
                                            Storyboard.TargetProperty="Y"
                                            To="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandDownAnimationEndPosition}"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableCommandsStates">
                                <VisualState x:Name="BothCommands" />
                                <VisualState x:Name="PrimaryCommandsOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SecondaryCommandsOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowPopup" Storyboard.TargetProperty="Placement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static PlacementMode.Relative}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates2">
                                <VisualState x:Name="Default" />
                                <VisualState x:Name="ExpandedUpWithPrimaryCommands" />
                                <VisualState x:Name="ExpandedDownWithPrimaryCommands" />
                                <VisualState x:Name="ExpandedUpWithoutPrimaryCommands" />
                                <VisualState x:Name="ExpandedDownWithoutPrimaryCommands" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            x:Name="OuterContentRoot"
                            VerticalAlignment="Top"
                            Margin="{TemplateBinding Padding}"
                            Width="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=CurrentWidth}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <Border.Clip>
                                <RectangleGeometry
                                    x:Name="OuterContentRootClip"
                                    Rect="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ContentClipRect}">
                                    <RectangleGeometry.Transform>
                                        <TranslateTransform x:Name="OuterContentRootClipTransform" />
                                    </RectangleGeometry.Transform>
                                </RectangleGeometry>
                            </Border.Clip>
                            <Grid x:Name="ContentRoot">
                                <Grid.Clip>
                                    <RectangleGeometry
                                        x:Name="ContentRootClip"
                                        Rect="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ContentClipRect}">
                                        <RectangleGeometry.Transform>
                                            <!--
                                                If you have a value set by a binding and then animate that value,
                                                the animation will clear the binding.  Because of that, we need to have
                                                two translate transforms - one that we bind to a property,
                                                and another that we can animate.
                                            -->
                                            <TransformGroup>
                                                <TranslateTransform X="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionDelta}" />
                                                <TranslateTransform x:Name="ContentRootClipTransform" />
                                            </TransformGroup>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Grid.Clip>
                                <Border
                                    x:Name="PrimaryItemsRoot"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ToolBarPanel
                                            x:Name="PART_ToolBarPanel"
                                            Height="40"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            IsItemsHost="true"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <ToggleButton
                                            x:Name="MoreButton"
                                            IsEnabled="{TemplateBinding HasOverflowItems}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Style="{DynamicResource CommandBarFlyoutEllipsisButtonStyle}"
                                            Grid.Column="1"
                                            IsTabStop="False"
                                            Visibility="{TemplateBinding EffectiveOverflowButtonVisibility}"
                                            IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press">
                                            <ToggleButton.RenderTransform>
                                                <TranslateTransform x:Name="MoreButtonTransform" />
                                            </ToggleButton.RenderTransform>
                                            <ui:FontIcon
                                                x:Name="EllipsisIcon"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                                FontSize="16"
                                                Glyph="&#xE10C;" />
                                        </ToggleButton>
                                    </Grid>
                                </Border>
                                <ui:PopupEx
                                    x:Name="OverflowPopup"
                                    AllowsTransparency="true"
                                    Placement="Bottom"
                                    IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    StaysOpen="false"
                                    Focusable="false"
                                    PopupAnimation="Fade">
                                    <Border
                                        x:Name="OuterOverflowContentRoot"
                                        Width="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandedWidth}">
                                        <Border.Clip>
                                            <RectangleGeometry
                                                x:Name="OuterOverflowContentRootClip"
                                                Rect="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=OverflowContentClipRect}">
                                                <RectangleGeometry.Transform>
                                                    <TranslateTransform x:Name="OuterOverflowContentRootClipTransform" />
                                                </RectangleGeometry.Transform>
                                            </RectangleGeometry>
                                        </Border.Clip>
                                        <!--<Border.RenderTransform>
                                            <TranslateTransform x:Name="OverflowContentRootTransform" Y="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandDownOverflowVerticalPosition}" />
                                        </Border.RenderTransform>-->
                                        <Grid
                                            x:Name="OverflowContentRoot"
                                            HorizontalAlignment="Stretch"
                                            Background="{TemplateBinding Background}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Grid.Clip>
                                                <RectangleGeometry
                                                    x:Name="OverflowContentRootClip"
                                                    Rect="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=OverflowContentClipRect}">
                                                    <RectangleGeometry.Transform>
                                                        <!--
                                                            If you have a value set by a binding and then animate that value,
                                                            the animation will clear the binding.  Because of that, we need to have
                                                            two translate transforms - one that we bind to a property,
                                                            and another that we can animate.
                                                        -->
                                                        <TransformGroup>
                                                            <TranslateTransform X="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionDelta}" />
                                                            <TranslateTransform x:Name="OverflowContentRootClipTransform" />
                                                        </TransformGroup>
                                                    </RectangleGeometry.Transform>
                                                </RectangleGeometry>
                                            </Grid.Clip>
                                            <primitives:CommandBarOverflowPresenter
                                                Grid.Row="1"
                                                x:Name="SecondaryItemsControl"
                                                Style="{TemplateBinding OverflowPresenterStyle}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{DynamicResource CommandBarFlyoutBorderThemeThickness}"
                                                IsTabStop="False">
                                                <primitives:CommandBarOverflowPanel
                                                    x:Name="PART_ToolBarOverflowPanel"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </primitives:CommandBarOverflowPresenter>
                                        </Grid>
                                    </Border>
                                </ui:PopupEx>
                                <ui:VisualStateGroupListener
                                    x:Name="ExpansionStates2Listener"
                                    GroupName="ExpansionStates2" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EllipsisIcon" Property="Foreground" Value="{DynamicResource CommandBarEllipsisIconForegroundDisabled}" />
                        </Trigger>
                        <!-- ExpandedUpWithPrimaryCommands -->
                        <Trigger SourceName="ExpansionStates2Listener" Property="CurrentStateName" Value="ExpandedUpWithPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderUpThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                        </Trigger>
                        <!-- ExpandedDownWithPrimaryCommands -->
                        <Trigger SourceName="ExpansionStates2Listener" Property="CurrentStateName" Value="ExpandedDownWithPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderDownThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                        </Trigger>
                        <!-- ExpandedUpWithoutPrimaryCommands -->
                        <Trigger SourceName="ExpansionStates2Listener" Property="CurrentStateName" Value="ExpandedUpWithoutPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <!-- ExpandedDownWithoutPrimaryCommands -->
                        <Trigger SourceName="ExpansionStates2Listener" Property="CurrentStateName" Value="ExpandedDownWithoutPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SimpleCommandBarFlyoutToolBarStyle" TargetType="primitives:CommandBarFlyoutToolBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarFlyoutToolBar">
                    <Border
                        x:Name="LayoutRoot"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">
                        <Border.Resources>
                            <Style TargetType="local:AppBarButton" BasedOn="{StaticResource CommandBarFlyoutAppBarButtonStyle}" />
                            <Style TargetType="local:AppBarToggleButton" BasedOn="{StaticResource CommandBarFlyoutAppBarToggleButtonStyle}" />
                            <primitives:CommandBarFlyoutCommandBarTemplateSettings x:Key="FlyoutTemplateSettings" />
                        </Border.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <ui:VisualStateGroupEx x:Name="AvailableCommandsStates">
                                <VisualState x:Name="BothCommands" />
                                <VisualState x:Name="PrimaryCommandsOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRoot" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SecondaryCommandsOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </ui:VisualStateGroupEx>
                            <ui:VisualStateGroupEx x:Name="ExpansionStates2">
                                <VisualState x:Name="Default" />
                                <VisualState x:Name="ExpandedUpWithPrimaryCommands" />
                                <VisualState x:Name="ExpandedDownWithPrimaryCommands" />
                                <VisualState x:Name="ExpandedUpWithoutPrimaryCommands" />
                                <VisualState x:Name="ExpandedDownWithoutPrimaryCommands" />
                            </ui:VisualStateGroupEx>
                        </VisualStateManager.VisualStateGroups>
                        <VisualStateManager.CustomVisualStateManager>
                            <ui:DebugVisualStateManager />
                        </VisualStateManager.CustomVisualStateManager>
                        <Border
                            x:Name="OuterContentRoot"
                            VerticalAlignment="Top"
                            Margin="{TemplateBinding Padding}"
                            Width="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=CurrentWidth}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding ElementName=LayoutRoot, Path=CornerRadius}">
                            <Border.Clip>
                                <RectangleGeometry
                                    x:Name="OuterContentRootClip"
                                    Rect="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ContentClipRect}">
                                    <RectangleGeometry.Transform>
                                        <TranslateTransform x:Name="OuterContentRootClipTransform" />
                                    </RectangleGeometry.Transform>
                                </RectangleGeometry>
                            </Border.Clip>
                            <Grid x:Name="ContentRoot">
                                <Grid.Clip>
                                    <RectangleGeometry
                                        x:Name="ContentRootClip"
                                        Rect="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ContentClipRect}">
                                        <RectangleGeometry.Transform>
                                            <!--
                                                If you have a value set by a binding and then animate that value,
                                                the animation will clear the binding.  Because of that, we need to have
                                                two translate transforms - one that we bind to a property,
                                                and another that we can animate.
                                            -->
                                            <TransformGroup>
                                                <TranslateTransform X="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=WidthExpansionDelta}" />
                                                <TranslateTransform x:Name="ContentRootClipTransform" />
                                            </TransformGroup>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Grid.Clip>
                                <Border
                                    x:Name="PrimaryItemsRoot"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ToolBarPanel
                                            x:Name="PART_ToolBarPanel"
                                            Height="40"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            IsItemsHost="true"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <ToggleButton
                                            x:Name="MoreButton"
                                            IsEnabled="{TemplateBinding HasOverflowItems}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Style="{DynamicResource CommandBarFlyoutEllipsisButtonStyle}"
                                            Grid.Column="1"
                                            IsTabStop="False"
                                            Visibility="{TemplateBinding EffectiveOverflowButtonVisibility}"
                                            IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press">
                                            <ToggleButton.RenderTransform>
                                                <TranslateTransform x:Name="MoreButtonTransform" />
                                            </ToggleButton.RenderTransform>
                                            <ui:FontIcon
                                                x:Name="EllipsisIcon"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                                FontSize="16"
                                                Glyph="&#xE10C;" />
                                        </ToggleButton>
                                    </Grid>
                                </Border>
                                <ui:PopupEx
                                    x:Name="OverflowPopup"
                                    AllowsTransparency="true"
                                    Placement="Bottom"
                                    IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    StaysOpen="false"
                                    Focusable="false"
                                    PopupAnimation="None">
                                    <ui:ThemeShadowChrome
                                        x:Name="OuterOverflowContentRoot"
                                        Width="{Binding Source={StaticResource FlyoutTemplateSettings}, Path=ExpandedWidth}"
                                        IsShadowEnabled="False">
                                        <Border
                                            x:Name="OverflowContentRoot"
                                            HorizontalAlignment="Stretch"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="{Binding ElementName=OuterOverflowContentRoot, Path=CornerRadius}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <primitives:CommandBarOverflowPresenter
                                                    Grid.Row="1"
                                                    x:Name="SecondaryItemsControl"
                                                    Style="{TemplateBinding OverflowPresenterStyle}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{DynamicResource CommandBarFlyoutBorderThemeThickness}"
                                                    IsTabStop="False">
                                                    <primitives:CommandBarOverflowPanel
                                                        x:Name="PART_ToolBarOverflowPanel"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </primitives:CommandBarOverflowPresenter>
                                            </Grid>
                                        </Border>
                                    </ui:ThemeShadowChrome>
                                </ui:PopupEx>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EllipsisIcon" Property="Foreground" Value="{DynamicResource CommandBarEllipsisIconForegroundDisabled}" />
                        </Trigger>
                        <!-- SecondaryCommandsOnly -->
                        <DataTrigger Binding="{Binding ElementName=AvailableCommandsStates, Path=CurrentStateName}" Value="SecondaryCommandsOnly">
                            <Setter TargetName="OverflowPopup" Property="Placement" Value="{x:Static PlacementMode.Relative}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="IsShadowEnabled" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
                        </DataTrigger>
                        <!-- ExpandedUpWithPrimaryCommands -->
                        <DataTrigger Binding="{Binding ElementName=ExpansionStates2, Path=CurrentStateName}" Value="ExpandedUpWithPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderUpThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                        </DataTrigger>
                        <!-- ExpandedDownWithPrimaryCommands -->
                        <DataTrigger Binding="{Binding ElementName=ExpansionStates2, Path=CurrentStateName}" Value="ExpandedDownWithPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderDownThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                        </DataTrigger>
                        <!-- ExpandedUpWithoutPrimaryCommands -->
                        <DataTrigger Binding="{Binding ElementName=ExpansionStates2, Path=CurrentStateName}" Value="ExpandedUpWithoutPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                        </DataTrigger>
                        <!-- ExpandedDownWithoutPrimaryCommands -->
                        <DataTrigger Binding="{Binding ElementName=ExpansionStates2, Path=CurrentStateName}" Value="ExpandedDownWithoutPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                        </DataTrigger>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterContentRoot" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                        <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot" Storyboard.TargetProperty="Opacity">
                                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                        <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:CommandBarFlyoutToolBar" BasedOn="{StaticResource SimpleCommandBarFlyoutToolBarStyle}" />

    <Style TargetType="primitives:CommandBarFlyoutCommandBar">
        <Setter Property="Background" Value="{DynamicResource CommandBarBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SystemControlTransientBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <!--<Setter Property="ClosedDisplayMode" Value="Compact" />-->
        <!--<Setter Property="ExitDisplayModeOnAccessKeyInvoked" Value="False" />-->
        <Setter Property="DefaultLabelPosition" Value="Collapsed" />
        <Setter Property="MaxWidth" Value="440" />
        <Setter Property="Height" Value="40" />
        <Setter Property="IsDynamicOverflowEnabled" Value="False" />
        <Setter Property="CommandBarOverflowPresenterStyle" Value="{StaticResource CommandBarFlyoutCommandBarOverflowPresenterStyle}" />
        <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarFlyoutCommandBar">
                    <primitives:CommandBarFlyoutToolBar
                        x:Name="PART_ToolBar"
                        Background="{TemplateBinding Background}"
                        Foreground="{TemplateBinding Foreground}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        IsTabStop="{TemplateBinding IsTabStop}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        DefaultLabelPosition="{TemplateBinding DefaultLabelPosition}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Height="{TemplateBinding Height}"
                        IsDynamicOverflowEnabled="{TemplateBinding IsDynamicOverflowEnabled}"
                        OverflowButtonVisibility="{TemplateBinding OverflowButtonVisibility}"
                        OverflowPresenterStyle="{TemplateBinding CommandBarOverflowPresenterStyle}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        IsOverflowOpen="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>