<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ModernWpf.Controls"
    xmlns:primitives="clr-namespace:ModernWpf.Controls.Primitives"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="http://schemas.modernwpf.com/2019">

    <Style TargetType="primitives:RadioButtonsListViewItem">
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Background" Value="{DynamicResource RadioButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource RadioButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadioButtonBorderBrush}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <!--<Setter Property="IsHoldingEnabled" Value="True" />-->
        <Setter Property="Padding" Value="8,6,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="AllowDrop" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="ui:FocusVisualHelper.FocusVisualMargin" Value="-7,-3,4,-3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:RadioButtonsListViewItem">

                    <Border
                        x:Name="RootGrid"
                        Margin="0,0,11,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid
                                Height="32"
                                VerticalAlignment="Top">
                                <Ellipse
                                    x:Name="OuterEllipse"
                                    Width="20"
                                    Height="20"
                                    Fill="{DynamicResource RadioButtonOuterEllipseFill}"
                                    Stroke="{DynamicResource RadioButtonOuterEllipseStroke}"
                                    StrokeThickness="{DynamicResource RadioButtonBorderThemeThickness}"
                                    UseLayoutRounding="False" />

                                <Ellipse
                                    x:Name="CheckOuterEllipse"
                                    Width="20"
                                    Height="20"
                                    Fill="{DynamicResource RadioButtonOuterEllipseCheckedFill}"
                                    Opacity="0"
                                    Stroke="{DynamicResource RadioButtonOuterEllipseCheckedStroke}"
                                    StrokeThickness="{DynamicResource RadioButtonBorderThemeThickness}"
                                    UseLayoutRounding="False" />

                                <Ellipse
                                    x:Name="CheckGlyph"
                                    Width="10"
                                    Height="10"
                                    Fill="{DynamicResource RadioButtonCheckGlyphFill}"
                                    Opacity="0"
                                    Stroke="{DynamicResource RadioButtonCheckGlyphStroke}"
                                    UseLayoutRounding="False" />
                            </Grid>

                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource RadioButtonForegroundPointerOver}" />
                            <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource RadioButtonBackgroundPointerOver}" />
                            <Setter TargetName="RootGrid" Property="BorderBrush" Value="{DynamicResource RadioButtonBorderBrushPointerOver}" />
                            <Setter TargetName="OuterEllipse" Property="Stroke" Value="{DynamicResource RadioButtonOuterEllipseStrokePointerOver}" />
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource RadioButtonOuterEllipseFillPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource RadioButtonForegroundPressed}" />
                            <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource RadioButtonBackgroundPressed}" />
                            <Setter TargetName="RootGrid" Property="BorderBrush" Value="{DynamicResource RadioButtonBorderBrushPressed}" />
                            <Setter TargetName="OuterEllipse" Property="Stroke" Value="{DynamicResource RadioButtonOuterEllipseStrokePressed}" />
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource RadioButtonOuterEllipseFillPressed}" />
                        </Trigger>
                        <!-- Selected -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckOuterEllipse" Property="Opacity" Value="1" />
                            <Setter TargetName="OuterEllipse" Property="Opacity" Value="0" />
                        </Trigger>
                        <!-- PointerOverSelected -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckOuterEllipse" Property="Opacity" Value="1" />
                            <Setter TargetName="OuterEllipse" Property="Opacity" Value="0" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource RadioButtonForegroundPointerOver}" />
                            <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource RadioButtonBackgroundPointerOver}" />
                            <Setter TargetName="RootGrid" Property="BorderBrush" Value="{DynamicResource RadioButtonBorderBrushPointerOver}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource RadioButtonCheckGlyphFillPointerOver}" />
                            <Setter TargetName="CheckGlyph" Property="Stroke" Value="{DynamicResource RadioButtonCheckGlyphStrokePointerOver}" />
                            <Setter TargetName="CheckOuterEllipse" Property="Stroke" Value="{DynamicResource RadioButtonOuterEllipseCheckedStrokePointerOver}" />
                            <Setter TargetName="CheckOuterEllipse" Property="Fill" Value="{DynamicResource RadioButtonOuterEllipseCheckedFillPointerOver}" />
                        </MultiTrigger>
                        <!-- PressedSelected -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckOuterEllipse" Property="Opacity" Value="1" />
                            <Setter TargetName="OuterEllipse" Property="Opacity" Value="0" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource RadioButtonForegroundPressed}" />
                            <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource RadioButtonBackgroundPressed}" />
                            <Setter TargetName="RootGrid" Property="BorderBrush" Value="{DynamicResource RadioButtonBorderBrushPressed}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource RadioButtonCheckGlyphFillPressed}" />
                            <Setter TargetName="CheckGlyph" Property="Stroke" Value="{DynamicResource RadioButtonCheckGlyphStrokePressed}" />
                            <Setter TargetName="CheckOuterEllipse" Property="Stroke" Value="{DynamicResource RadioButtonOuterEllipseCheckedStrokePressed}" />
                            <Setter TargetName="CheckOuterEllipse" Property="Fill" Value="{DynamicResource RadioButtonOuterEllipseCheckedFillPressed}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RootGrid" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:RadioButtonsListView">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:RadioButtonsListView">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                        SnapsToDevicePixels="true">
                        <StackPanel>
                            <ContentPresenter
                                x:Name="HeaderContentPresenter"
                                Content="{TemplateBinding Header}"
                                Margin="{DynamicResource RadioButtonsHeaderMargin}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="HeaderContentPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Static sys:String.Empty}">
                            <Setter TargetName="HeaderContentPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:RadioButtons">
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RadioButtons">
                    <primitives:RadioButtonsListView
                        x:Name="InnerListView"
                        SelectionMode="Single"
                        ItemTemplate="{TemplateBinding ItemTemplate}"
                        Header="{TemplateBinding Header}">
                        <primitives:RadioButtonsListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid
                                    Columns="{Binding MaximumColumns, RelativeSource={RelativeSource AncestorType=local:RadioButtons}}"
                                    HorizontalAlignment="Left" />
                            </ItemsPanelTemplate>
                        </primitives:RadioButtonsListView.ItemsPanel>
                    </primitives:RadioButtonsListView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>